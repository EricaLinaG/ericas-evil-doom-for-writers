* doom.d

My =Doom-Emacs= configuration.

[[file:splash/emacs.png]]

** Introduction and Notable Features
This configuration is based around [[https://github.com/jyp/boon][Boon]], which is An Ergonomic Command Mode for Emacs.

It is more ergonomic and intuitive than Evil, which is the default modal editing mode in Doom-Emacs.

Fortunately, Doom-Emacs works rather well with Evil turned off.

In Command mode, you use the right hand to move around the text, using =jkl;= to move backward by word, backward by character, forward by character, and forward by word. =uiop= is backward by paragraph, up a line, down a line, and forward by paragraph. I have bound =KL= to be backward by sentence, and forward by sentence. All in all, an extremely ergonomic way of navigating a document.

Then I am using =d= to delete, =q= to insert a character, and =t= to change a character.

Pressing =v= will bring you into Insert mode, where you can write. When you want to switch to Command mode, you press =C-;= (Control-;) or Escape. I have chosen to steal the =C-;= keyboard shortcut from flyspell. It is much more ergonomic to use =C-;= than =Esc=.

With Boon, you can use all the regular Emacs keyboard commands, with a few exceptions, so it is not intruding too much on what you already know (unlike Evil mode). Some times, Boon conflicts with a particular mode, so I have bound F7 to turn Boon off, and F6 to turn it on again. Also, Boon is disabled in iBuffer and other places.

Boon works in concert with Org-mode and Org-roam to provide an excellent environment for creative writing.

I have then proceeded  to add dictionaries, thesauruses, and a host of other features, all aimed at creative writing.

** Prerequisites and Installation
First, make sure that you have at least Emacs 27.1 installed, and have made sure that Git and the other prerequisites of Doom-Emacs are satisfied:
[[https://github.com/hlissner/doom-emacs#prerequisites][Doom-Emacs - Prerequisites]]
*** Doom-Emacs
Before you install anything, you need to make sure that there isn’t a ~.emacs.d~ directory on your machine. If you are running Emacs, there is, so you need to either delete or rename it.

To install Doom-Emacs, clone it into ~.emacs.d~ , and run the Doom-Emacs installation script:

#+BEGIN_SRC
git clone --depth 1 https://github.com/hlissner/doom-emacs ~/.emacs.d

~/.emacs.d/bin/doom install
#+END_SRC

Try running Emacs now to make sure that Doom-Emacs is up and running.

If you run into issues, where Doom-Emacs has a hiccup, a simple restart usually fixes it.

Once Doom-Emacs is up and running, it’s time to prepare the installation of Hotel California.

*** Additional Requirements
This configuration uses the following packages that have dependencies:
**** Org-Roam

=org-roam= uses a custom SQLite binary to store its database, and it will compile it when it installs. So there must be a C compiler available to Emacs.

On Linux, there are likely to be a C compiler installed, but Windows is different.

One option is to use MSYS2, which is Linux distribution for Windows. Follow the instructions on [[https://www.msys2.org/][MSYS2 home page]]. Be sure to install the full mingw-w64 GCC software collection.

Make sure that you add the =bin= directory of you MSYS2 installation to your system path, so that Emacs can find it.

On my machine, I had to add =C:\msys64\mingw64\bin=

**** Aspell
***** Linux

If Aspell is not installed, install =aspell= using your package manager.

***** Windows

Assuming that you installed MSYS2, including the mingw compiler suite, you can simply open up a MSYS2 command line and run:

=pacman -Ss aspell=

That will give you a list of aspell related packages to install.

Here's the packages that I installed:

=pacman -S mingw-w64-x86_64-aspell=

=pacman -S mingw-w64-x86_64-aspell-en=

If you followed the guide for how to install the C compiler, then Emacs will be able to find =aspell=, and all should be well.

**** Proselint
Proselint is required by the on-the-fly language checker.

Simply follow the [[https://github.com/amperser/proselint#installation][Proselint installation instructions]] and make sure to, if on Windows, to add the location of the Proselint binary to your PATH. The message you get from Python's pip installation procedure reminds you of what exact path you need to add.

**** Lexic
[[https://github.com/tecosaur/lexic][Lexic]] looks up words in local dictionaries, as opposed to online dictionaries. It requires you to install the Stardict command-line tool:

=sudo apt install sdcv=

Then, create a directory in your home directory named “stardict” to store the dictionaries, and run the =loaddicts.sh= script to download, unpack and install Stardict dictionaries into your newly created directory.

You need to tell the Stardict command-line tool where to find the dictionaries by setting the =STARDICT_DATA_DIR= variable.

On Linux:

#+BEGIN_SRC
STARDICT_DATA_DIR="~/stardict"
export STARDICT_DATA_DIR
#+END_SRC

**** Smog
[[https://github.com/zzkt/smog][Smog]] stands for Simple Measure of Gobbledygook and uses =diction= or =style= command-line tools to analyse the writing style, word use and readability of the prose.

=sudo apt install diction=

**** Hugo
I use Hugo to export and generate an Epub, and to write blog posts, and if you want that, you need to install [[https://gohugo.io/][Hugo]].

*** Installation
Delete the ~.doom.d~ directory that the Doom-Emacs installation script created.

Clone the Hotel California repository into =~/.doom.d=, like this:

=git clone https://github.com/jacmoe/.doom.d ~/.doom.d=

Now run the Doom-Emacs ~sync~ command:

=~/.emacs.d/bin/doom sync=

Before running Emacs again, check with the Doom-Emacs doctor that everything is alright:

=~./.emacs.d/bin doom doctor=

If it doesn’t find any errors, you should be able to successfully run this Emacs configuration. But before you do, you need to adjust the configuration a bit:
**** Paths
You need to change some variables around line 20 in =config.el=, the location of personal dictionary, bookmarks and Org folders. Also be sure to change the personal information around line 40.
**** Fonts
This configuration uses two fonts, =Overpass Mono= and =Alegreya=, the first is mono–spaced and the second is a variable width font that’s great for reading/writing.

If you want to use your own fonts, do change the configuration, around line 90 in ~config.el~.



** Features Overview
** Usage Notes
** How do I?
** Screenshots
**** Looking up words in dictionaries
The window on the right shows the entry in Merriam-Webster for the word “ancient”, while the menu on the bottom shows a list of synonyms. There are also lists of antonyms and example sentences.
[[file:screenshots/lookup.png]]


#  LocalWords:  emacs MSYS mingw aspell Proselint Lexic Stardict flyspell
